generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid()) @map("_id")
  email     String       @unique
  name      String?
  entities  CoreEntity[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

enum CoreEntityType {
  PROPERTY
  CONTACT
  COMPANY
}

model CoreEntity {
  id              String         @id @default(uuid()) @map("_id")
  type            CoreEntityType
  user            User?          @relation(fields: [userId], references: [id])
  userId          String?
  linkedEntities  CoreEntity[]   @relation("CoreEntityToCoreEntity")
  relatedEntities CoreEntity[]   @relation("CoreEntityToCoreEntity")
  attributes      Attributes[]
  meta            MetaData?      @relation(fields: [metaId], references: [id])
  metaId          String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Attributes {
  id        String     @id @default(uuid()) @map("_id")
  name      String
  value     String
  entity    CoreEntity @relation(fields: [entityId], references: [id], onDelete: Cascade)
  entityId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model MetaData {
  id         String       @id @default(uuid()) @map("_id")
  name       String
  surName    String
  address    Address      @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId  String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  CoreEntity CoreEntity[]
}

model Address {
  id        String     @id @default(uuid()) @map("_id")
  street    String
  city      String
  state     String
  zip       String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  meta      MetaData[]
}
